syntax = "proto3";

package translation;

option go_package = "proto/generated/translation";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Flashcard Backend Translation API";
    version: "1.0";
    description: "翻译服务相关的API接口";
  };
  schemes: HTTP;
  schemes: HTTPS;
  consumes: "application/json";
  produces: "application/json";
};

service Translation {
  // 翻译文本
  rpc Translation(TranslationRequest) returns (TranslationResponse) {
    option (google.api.http) = {
      post: "/api/v1/translation"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "翻译文本";
      description: "将文本从源语言翻译到目标语言";
      tags: "翻译服务";
    };
  }
}

message TranslationRequest {
  string q = 1;
  string from = 2;
  string to = 3;
}

message TranslationResponse {
  string errorCode = 1;
  string query = 2;
  repeated string translation = 3;
  string l = 4;
  DictResponse dict = 5;
  string tSpeakUrl =6;
  string speakUrl = 7;
}

message DictResponse {
  string url = 1;
}